#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Ollama —á–∞—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏
–ó–∞–ø—É—Å–∫: python local_server.py
"""

from flask import Flask, request, jsonify, send_from_directory
from flask_cors import CORS
import json
import os
from datetime import datetime

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_FILE = 'submissions.json'

def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(DATA_FILE):
        try:
            with open(DATA_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        except:
            return []
    return []

def save_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª"""
    try:
        with open(DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        return True
    except:
        return False

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - Ollama —á–∞—Ç"""
    return send_from_directory('.', 'ollama-chat.html')

@app.route('/form')
def form_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π"""
    return send_from_directory('.', 'index3.html')

@app.route('/api/submit', methods=['POST'])
def submit_data():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        data = request.get_json()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        required_fields = ['name', 'email', 'message']
        for field in required_fields:
            if not data.get(field):
                return jsonify({'error': f'–ü–æ–ª–µ "{field}" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'}), 400
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        data['timestamp'] = datetime.now().isoformat()
        data['id'] = len(load_data()) + 1
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        submissions = load_data()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        submissions.append(data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if save_data(submissions):
            return jsonify({
                'message': f'–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! ID: {data["id"]}',
                'id': data['id']
            }), 200
        else:
            return jsonify({'error': '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö'}), 500
            
    except Exception as e:
        return jsonify({'error': f'–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}'}), 500

# Tools API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
@app.route('/api/tools', methods=['POST'])
def execute_tool():
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏"""
    try:
        data = request.get_json()
        tool_name = data.get('tool')
        parameters = data.get('parameters', {})
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        current_dir = os.getcwd()
        
        if tool_name == 'create_file':
            filename = parameters.get('filename')
            content = parameters.get('content', '')
            
            if not filename:
                return jsonify({'error': '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞'}), 400
            
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å
            safe_path = os.path.join(current_dir, filename)
            if not safe_path.startswith(current_dir):
                return jsonify({'error': '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É'}), 400
            
            with open(safe_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            return jsonify({'result': f'–§–∞–π–ª {filename} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ'})
        
        elif tool_name == 'read_file':
            filename = parameters.get('filename')
            
            if not filename:
                return jsonify({'error': '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞'}), 400
            
            safe_path = os.path.join(current_dir, filename)
            if not safe_path.startswith(current_dir):
                return jsonify({'error': '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É'}), 400
            
            if not os.path.exists(safe_path):
                return jsonify({'error': f'–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
            
            with open(safe_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            return jsonify({'result': f'–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ {filename}:\n{content}'})
        
        elif tool_name == 'create_directory':
            dirname = parameters.get('dirname')
            
            if not dirname:
                return jsonify({'error': '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–∞–ø–∫–∏'}), 400
            
            safe_path = os.path.join(current_dir, dirname)
            if not safe_path.startswith(current_dir):
                return jsonify({'error': '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ'}), 400
            
            os.makedirs(safe_path, exist_ok=True)
            
            return jsonify({'result': f'–ü–∞–ø–∫–∞ {dirname} —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ'})
        
        elif tool_name == 'list_files':
            path = parameters.get('path', current_dir)
            
            if not path.startswith(current_dir):
                path = current_dir
            
            if not os.path.exists(path):
                return jsonify({'error': f'–ü—É—Ç—å {path} –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
            
            files = []
            for item in os.listdir(path):
                item_path = os.path.join(path, item)
                if os.path.isfile(item_path):
                    files.append(f'üìÑ {item}')
                elif os.path.isdir(item_path):
                    files.append(f'üìÅ {item}/')
            
            files_list = '\n'.join(files) if files else '–ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞'
            return jsonify({'result': f'–°–æ–¥–µ—Ä–∂–∏–º–æ–µ {path}:\n{files_list}'})
        
        elif tool_name == 'delete_file':
            filename = parameters.get('filename')
            
            if not filename:
                return jsonify({'error': '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞'}), 400
            
            safe_path = os.path.join(current_dir, filename)
            if not safe_path.startswith(current_dir):
                return jsonify({'error': '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É'}), 400
            
            if not os.path.exists(safe_path):
                return jsonify({'error': f'–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
            
            os.remove(safe_path)
            
            return jsonify({'result': f'–§–∞–π–ª {filename} —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'})
        
        else:
            return jsonify({'error': f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {tool_name}'}), 400
            
    except Exception as e:
        return jsonify({'error': f'–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞: {str(e)}'}), 500

@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        'status': 'OK',
        'message': '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ',
        'timestamp': datetime.now().isoformat()
    }), 200

@app.errorhandler(404)
def not_found(error):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ 404"""
    return jsonify({'error': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404

@app.errorhandler(500)
def internal_error(error):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ 500"""
    return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
    print("üåê Ollama —á–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000")
    print("üìù –§–æ—Ä–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000/form")
    print("üîß API endpoints:")
    print("   GET  /                     - Ollama —á–∞—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏")
    print("   GET  /form                 - –§–æ—Ä–º–∞")
    print("   POST /api/submit           - –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã")
    print("   POST /api/tools            - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    print("   GET  /api/health           - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
    print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Ollama –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:11434")
    
    app.run(host='0.0.0.0', port=5000, debug=True)